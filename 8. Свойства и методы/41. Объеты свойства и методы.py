# 41. Объекты

# Строки в Python — это объекты. В примере выше мы вызываем метод, то есть функцию, которая связана со строкой.
name = 'Hexlet'
# Метод upper()
upper_name = name.upper()
print(upper_name)  # => 'HEXLET'

# Также вызов можно делать и напрямую:
'Hexlet'.upper()  # 'HEXLET'

# дока по методам для строк https://python.readthedocs.io/en/latest/library/stdtypes.html#string-methods
# несколько примеров

name = 'Python'

# Возвращает индекс первого вхождения буквы в строку
name.find('t')  # 2

# Переводит в нижний регистр
name.lower()  # 'python'

# Заменяет одну подстроку другой
name.replace('on', 'off')  # 'Pythoff'


# с другими типами та же петрушка

x = -5
# Возвращает модуль числа
# Имя выглядит странно, но это действительно имя метода
print(x.__abs__())

# В примере выше есть имя метода с двумя подчеркиваниями в начале и в конце. В Python так называют методы, которые не предназначены для прямого вызова.
# Для них создали функции, которые внутри себя уже сами вызывают методы:
# Создатель Python решил, что будет нагляднее, если математические или похожие на математические операции выразить функциями. Он хотел, чтобы такие функции воспринимались как операции, типа сложения или вычитания.
x = -5
abs(x)  # вызывает x.__abs__()
# -5 в 3 степени
pow(x, 3)  # вызывает x.__pow__(3)

len('Hexlet')  # Вызывает 'Hexlet'.__len__()


# Кроме методов у объектов есть атрибуты, но у встроенных в Python объектов их мало. Например, атрибут __doc__, который возвращает документацию функции. Поэтому функции тоже считаются объектами:
# Атрибуты работают и выглядят как переменные, только указываются через точку после объекта.
print(len.__doc__) # 'Return the number of items in a container.')


# лишние пробельные символы в конце или начале строки вырезают с помощью метода .strip(), например, было: ' hello\n ', стало: 'hello'.
first_name = '  Grigor   \n'
print(first_name)
first_name = first_name.strip()
print(first_name)


# Найдите символы N и , (запятая) внутри текста в переменной text. Выведите на экран их индексы.
text = 'Never forget what you are, for surely the world will not'
print(f'Index Of N: {text.find("N")}\nIndex Of ,: {text.find(",")}')


# 44. Цепочка вызовов. В цепочках вычисления всегда идут слева направо.

name = 'Tirion'
print(name.replace('Ti', 'Ki').lower())  # => kirion

text = 'When \t\n you play a \t\n game of thrones you win or you die.'
print(len(text[4:15].strip()))